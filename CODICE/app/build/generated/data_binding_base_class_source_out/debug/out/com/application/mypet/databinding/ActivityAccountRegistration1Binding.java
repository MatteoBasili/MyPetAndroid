// Generated by view binder compiler. Do not edit!
package com.application.mypet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.application.mypet.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAccountRegistration1Binding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button continueButton;

  @NonNull
  public final TextView email;

  @NonNull
  public final EditText emailInput;

  @NonNull
  public final ImageView hidePwd1;

  @NonNull
  public final ImageView hidePwd2;

  @NonNull
  public final ConstraintLayout intConstLayout;

  @NonNull
  public final TextView name;

  @NonNull
  public final EditText nameInput;

  @NonNull
  public final TextView pwd;

  @NonNull
  public final TextView pwdConfirm;

  @NonNull
  public final EditText pwdConfirmInput;

  @NonNull
  public final EditText pwdInput;

  @NonNull
  public final ImageView showPwd1;

  @NonNull
  public final ImageView showPwd2;

  @NonNull
  public final TextView subtitle;

  @NonNull
  public final TextView surname;

  @NonNull
  public final EditText surnameInput;

  @NonNull
  public final TextView title;

  @NonNull
  public final ToolbarWithBackBinding toolbar;

  private ActivityAccountRegistration1Binding(@NonNull ConstraintLayout rootView,
      @NonNull Button continueButton, @NonNull TextView email, @NonNull EditText emailInput,
      @NonNull ImageView hidePwd1, @NonNull ImageView hidePwd2,
      @NonNull ConstraintLayout intConstLayout, @NonNull TextView name, @NonNull EditText nameInput,
      @NonNull TextView pwd, @NonNull TextView pwdConfirm, @NonNull EditText pwdConfirmInput,
      @NonNull EditText pwdInput, @NonNull ImageView showPwd1, @NonNull ImageView showPwd2,
      @NonNull TextView subtitle, @NonNull TextView surname, @NonNull EditText surnameInput,
      @NonNull TextView title, @NonNull ToolbarWithBackBinding toolbar) {
    this.rootView = rootView;
    this.continueButton = continueButton;
    this.email = email;
    this.emailInput = emailInput;
    this.hidePwd1 = hidePwd1;
    this.hidePwd2 = hidePwd2;
    this.intConstLayout = intConstLayout;
    this.name = name;
    this.nameInput = nameInput;
    this.pwd = pwd;
    this.pwdConfirm = pwdConfirm;
    this.pwdConfirmInput = pwdConfirmInput;
    this.pwdInput = pwdInput;
    this.showPwd1 = showPwd1;
    this.showPwd2 = showPwd2;
    this.subtitle = subtitle;
    this.surname = surname;
    this.surnameInput = surnameInput;
    this.title = title;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAccountRegistration1Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAccountRegistration1Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_account_registration1, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAccountRegistration1Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.continue_button;
      Button continueButton = ViewBindings.findChildViewById(rootView, id);
      if (continueButton == null) {
        break missingId;
      }

      id = R.id.email;
      TextView email = ViewBindings.findChildViewById(rootView, id);
      if (email == null) {
        break missingId;
      }

      id = R.id.email_input;
      EditText emailInput = ViewBindings.findChildViewById(rootView, id);
      if (emailInput == null) {
        break missingId;
      }

      id = R.id.hide_pwd1;
      ImageView hidePwd1 = ViewBindings.findChildViewById(rootView, id);
      if (hidePwd1 == null) {
        break missingId;
      }

      id = R.id.hide_pwd2;
      ImageView hidePwd2 = ViewBindings.findChildViewById(rootView, id);
      if (hidePwd2 == null) {
        break missingId;
      }

      id = R.id.int_const_layout;
      ConstraintLayout intConstLayout = ViewBindings.findChildViewById(rootView, id);
      if (intConstLayout == null) {
        break missingId;
      }

      id = R.id.name;
      TextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.name_input;
      EditText nameInput = ViewBindings.findChildViewById(rootView, id);
      if (nameInput == null) {
        break missingId;
      }

      id = R.id.pwd;
      TextView pwd = ViewBindings.findChildViewById(rootView, id);
      if (pwd == null) {
        break missingId;
      }

      id = R.id.pwd_confirm;
      TextView pwdConfirm = ViewBindings.findChildViewById(rootView, id);
      if (pwdConfirm == null) {
        break missingId;
      }

      id = R.id.pwd_confirm_input;
      EditText pwdConfirmInput = ViewBindings.findChildViewById(rootView, id);
      if (pwdConfirmInput == null) {
        break missingId;
      }

      id = R.id.pwd_input;
      EditText pwdInput = ViewBindings.findChildViewById(rootView, id);
      if (pwdInput == null) {
        break missingId;
      }

      id = R.id.show_pwd1;
      ImageView showPwd1 = ViewBindings.findChildViewById(rootView, id);
      if (showPwd1 == null) {
        break missingId;
      }

      id = R.id.show_pwd2;
      ImageView showPwd2 = ViewBindings.findChildViewById(rootView, id);
      if (showPwd2 == null) {
        break missingId;
      }

      id = R.id.subtitle;
      TextView subtitle = ViewBindings.findChildViewById(rootView, id);
      if (subtitle == null) {
        break missingId;
      }

      id = R.id.surname;
      TextView surname = ViewBindings.findChildViewById(rootView, id);
      if (surname == null) {
        break missingId;
      }

      id = R.id.surname_input;
      EditText surnameInput = ViewBindings.findChildViewById(rootView, id);
      if (surnameInput == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.toolbar;
      View toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }
      ToolbarWithBackBinding binding_toolbar = ToolbarWithBackBinding.bind(toolbar);

      return new ActivityAccountRegistration1Binding((ConstraintLayout) rootView, continueButton,
          email, emailInput, hidePwd1, hidePwd2, intConstLayout, name, nameInput, pwd, pwdConfirm,
          pwdConfirmInput, pwdInput, showPwd1, showPwd2, subtitle, surname, surnameInput, title,
          binding_toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
